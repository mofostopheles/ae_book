/** * An After Effects script with UI for rendering out multiple versions of a  * comp with different music tracks. Very useful for :06s and :15s spots where the client * wants to hear and see everything comped up. * * Usage: *      ‣ In your master comp, add the tag #musicOption to any music layers. *      ‣ Turn off all layers with this tag (they will be enabled automatically). *      ‣ Run this script. *      ‣ The comp will be duped as many times as this tag appears. *      ‣ After each duped comp is added to the render queue, the layer is turned off again.  *      ‣ To clean up the project space, perform an undo. This will be more elegant in a future version. */// Copyright © 2020, Arlo Emerson// arloemerson@gmail.com#include './__common.jsx';app.beginUndoGroup('work_undo');var renderLayerPasses = function() {    return {        arrSelectedComps: getSelectedComps(),        main: function(override) {            var compsChangedCounter = 0;            var layerSettings;            var selectedComp;            for (var i = 0; i < this.arrSelectedComps.length; i++) {                selectedComp = this.arrSelectedComps[i];                layerSettings = [];                // loop all the layers                for (var j = 1; j <= selectedComp.numLayers; j++) {                    if (selectedComp.layers[j].name.indexOf('#musicOption') > -1) {                        // create a dupe comp from this                        selectedComp.layers[j].audioEnabled = true;                        // modify the render name to use the hashtag                        dupeSelectedComp = selectedComp.duplicate();                        // Clean up the name because After Effects automatically adds numbers                        // at the end of names when duping comps.                        // This will probably break you if the comp has a version number higher than 2.                        if (dupeSelectedComp.name.indexOf('_2') > -1) {                            dupeSelectedComp.name = dupeSelectedComp.name.replace('_2', '');                        } else if (dupeSelectedComp.name.indexOf(' 2') > -1) {                            dupeSelectedComp.name = dupeSelectedComp.name.replace(' 2', '');                        }                        var modifiedName = selectedComp.layers[j].name.replace(" #musicOption", "")                        dupeSelectedComp.name = modifiedName + '_' + dupeSelectedComp.name;                        var renderQueueItem = app.project.renderQueue.items.add(dupeSelectedComp);                        // set the template accordingly                        renderQueueItem.outputModule(1).applyTemplate('1280x720__quick');                        selectedComp.layers[j].audioEnabled = false;                    }                }                compsChangedCounter++;            }            aalert(compsChangedCounter + ' comp/s total touched.');        }    };};/** * Function with inner main function. Invoked at bottom of this file. * Removes unwanted comps from project pane. */var cleanupLayerPasses = function() {    return {        main: function(stringToFind) {            var allComps = app.project.items;            var removedCount = 0;            var item;            for (var i = allComps.length; i >= 1; i--) {                item = allComps[i];                if (item.name.indexOf(stringToFind) > -1) {                    item.remove();                    removedCount++;                }            }            aalert(removedCount + ' items were removed.');        }    };};/** * Runs the script. * Calls main and passes args (if any). */renderLayerPasses().main();app.endUndoGroup();